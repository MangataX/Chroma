#include "character.h"

// 构造函数，初始化属性
Character::Character(int hp, int atk, int x, int y)
{
    this->hp = hp;
    this->atk = atk;
    this->speed = 10;
    this->interact = false;
    
    // 加载图片文件
    pixmap.load(":/images/character.png"); // 修改这里为你的图片文件路径

    // 加载音效文件
    soundEffect.setSource(QUrl::fromLocalFile(":/sounds/character.wav")); // 修改这里为音效文件路径

    // 设置初始位置
    setPos(x, y);
}

// 重写绘图函数
void Character::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
{
    Q_UNUSED(option);
    Q_UNUSED(widget);

    
   // 绘制角色图片
   painter->drawPixmap(-10, -10, 20, 20, pixmap); 
}

// 重写边界函数
QRectF Character::boundingRect() const
{
   return QRectF(-10, -10, 20, 20);
}

// 重写碰撞检测函数
bool Character::collidesWithItem(const QGraphicsItem *other, Qt::ItemSelectionMode mode) const
{
   Q_UNUSED(mode);

   // 简单地判断两个圆形的距离是否小于半径之和
   qreal dx = other->x() - x();
   qreal dy = other->y() - y();
   qreal distance = qSqrt(dx * dx + dy * dy);

   return distance < 20;
}

// 重写按键事件处理函数
void Character::keyPressEvent(QKeyEvent *event)
{

   switch (event->key()) {
   case Qt::Key_Left:
       // 向左移动，注意边界检查
       if (x() > -250) {
           moveBy(-speed, 0);
       }
       break;
   case Qt::Key_Right:
       // 向右移动，注意边界检查
       if (x() < 250) {
           moveBy(speed, 0);
       }
       break;
   case Qt::Key_Space:
       // 设置交互标志为真，表示可以进行交互操作，比如攻击或对话等
       interact = true;

       // 播放音效
       soundEffect.play();
       break;
   default:
       break;
   }
}

// 获取和设置生命值
int Character::getHp() const
{
   return hp;
}

void Character::setHp(int value)
{
   hp = value;
}

// 获取和设置攻击力
int Character::getAtk() const
{
   return atk;
}

void Character::setAtk(int value)
{
   atk = value;
}
bool Character::getInteract(){return interact;}
void Character::setInteract(bool b){interact=b;}
void Character::setSpeed(int s){speed=s;}
